{"version":3,"file":"static/js/53.7a3ce39f.chunk.js","mappings":"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","sources":["Components/Register/Register.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport joi from 'joi';\r\nimport { AuthContext } from '../../Shared/Context/AuthStore';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Register() {\r\n\r\n  const [user, setUser] = useState({\r\n    first_name: '', \r\n    last_name: 'a', \r\n    email: '', \r\n    phone: '', \r\n    password: '', \r\n    repeat_password: '',\r\n    age: 20, \r\n  });\r\n\r\n  const [validationErrors, setValidationErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fireFlag, setFireFlag] = useState(null);\r\n\r\n  const [nameError, setNameError] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [phoneError, setPhoneError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [rePasswordError, setRepasswordError] = useState('');\r\n\r\n  const {signup, signupResponse} = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [serverError, setServerError] = useState('');\r\n\r\n  const getFormValue = (e) => {\r\n    let currentUser = {...user};\r\n    currentUser[e.target.name] = e.target.value;\r\n    setUser(currentUser);\r\n  }\r\n\r\n  const checkValidation = () => {\r\n    // Reset Prev Error Messages\r\n    setValidationErrors('');\r\n    setNameError('');\r\n    setEmailError('');\r\n    setPhoneError('');\r\n    setPasswordError('');\r\n    setRepasswordError('');\r\n    // Create Schema\r\n    const schema = joi.object({\r\n      first_name: joi.string().required().pattern(/^[a-zA-Z ]{2,}$/), \r\n      last_name: joi.string(), \r\n      email: joi.string().required().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }), \r\n      phone: joi.string().required().pattern(/^01[0125][0-9]{8}$/), \r\n      password: joi.string().required().min(3).max(30),\r\n      repeat_password: joi.ref('password'),\r\n      age: joi.number(), \r\n    })\r\n    // Validation Response\r\n    let { error } = schema.validate(user, {abortEarly: false});\r\n    return error;\r\n  }\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    setServerError('');\r\n    setIsLoading(true);\r\n    let validationError = checkValidation();\r\n    if(validationError) {\r\n      // Validation Error case\r\n      setValidationErrors(validationError.details);\r\n      setIsLoading(false);\r\n    }else {\r\n      // Validation Success case\r\n      setFireFlag(true);\r\n      signup(user);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(validationErrors.length > 0) {\r\n      for(const error of validationErrors) {\r\n        // Name\r\n        if(error.context.key === 'first_name') {\r\n          if(error.type.includes('pattern')) {\r\n            setNameError(\"Name must at least 2 Characters of letters only\");\r\n          }else {\r\n            setNameError(error.message.replace('\"first_name\"', 'Name'));\r\n          }\r\n        }\r\n        // Email\r\n        else if(error.context.key === 'email') {\r\n          if(error.type.includes('pattern')) {\r\n            setEmailError(\"Please Enter a valid Email\");\r\n          }else {\r\n            setEmailError(error.message.replace('\"email\"','Email'));\r\n          }\r\n        }\r\n        // Phone\r\n        else if(error.context.key === 'phone') {\r\n          if(error.type.includes('pattern')) {\r\n            setPhoneError(\"Please Enter a valid Phone Number\");\r\n          }else {\r\n            setPhoneError(error.message.replace('\"phone\"','Phone'));\r\n          }\r\n        }\r\n        // Password\r\n        else if(error.context.key === 'password') {\r\n          setPasswordError(error.message.replace('\"password\"','Password'));\r\n        }\r\n        // Repassword\r\n        else if(error.context.key === 'repeat_password') {\r\n          setRepasswordError('Password and Re-Password Fields must be matched');\r\n        }\r\n      }\r\n    }\r\n  }, [validationErrors])\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n    if(signupResponse && fireFlag !== null) {\r\n      if(signupResponse.message === 'success') {\r\n        navigate('/login');\r\n      }else {\r\n        setServerError(signupResponse.message);\r\n      }\r\n      setFireFlag(false);\r\n    }\r\n  }, [signupResponse, fireFlag, navigate])\r\n\r\n  return (\r\n    <Row className=\"justify-content-center mt-4 pt-4\">\r\n      <Col xs=\"12\" md=\"8\">\r\n        <Card className=\"bg-transparent border-0\">\r\n          <Card.Header className=\"bg-transparent border-0 text-white\">\r\n            <Card.Title>Registeration Form</Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <form onSubmit={submitForm}>\r\n              {fireFlag !== null && serverError &&\r\n              <Alert variant='danger' className=\"text-center text-capitalize\">{serverError}</Alert>}\r\n              <FloatingLabel label=\"Name\" className=\"mb-1\">\r\n                <Form.Control type=\"text\" name=\"first_name\" placeholder=\"Name\" onChange={getFormValue}/>\r\n              </FloatingLabel>\r\n              <Collapse in={nameError.length > 0 ? true: false}>\r\n                <Form.Text className=\"text-danger\">{nameError}</Form.Text>\r\n              </Collapse>\r\n              <FloatingLabel label=\"Email\" className=\"mt-3 mb-1\">\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={getFormValue}/>\r\n              </FloatingLabel>\r\n              <Collapse in={emailError.length > 0 ? true: false}>\r\n                <Form.Text className=\"text-danger\">{emailError}</Form.Text>\r\n              </Collapse>\r\n              <FloatingLabel label=\"Phone Number\" className=\"mt-3 mb-1\">\r\n                <Form.Control type=\"tel\" name=\"phone\" placeholder=\"Phone Number\" onChange={getFormValue}/>\r\n              </FloatingLabel>\r\n              <Collapse in={phoneError.length > 0 ? true: false}>\r\n                <Form.Text className=\"text-danger\">{phoneError}</Form.Text>\r\n              </Collapse>\r\n              <FloatingLabel label=\"Password\" className=\"mt-3 mb-1\">\r\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={getFormValue}/>\r\n              </FloatingLabel>\r\n              <Collapse in={passwordError.length > 0 ? true: false}>\r\n                <Form.Text className=\"text-danger\">{passwordError}</Form.Text>\r\n              </Collapse>\r\n              <FloatingLabel label=\"Re-Password\" className=\"mt-3 mb-1\">\r\n                <Form.Control type=\"password\" name=\"repeat_password\" placeholder=\"Re-Password\" onChange={getFormValue}/>\r\n              </FloatingLabel>\r\n              <Collapse in={rePasswordError.length > 0 ? true: false}>\r\n                <Form.Text className=\"text-danger\">{rePasswordError}</Form.Text>\r\n              </Collapse>\r\n              <Button className=\"float-end my-4 form-btn\" type=\"submit\">\r\n                {isLoading ? <>\r\n                  <Spinner animation=\"grow\" size=\"sm\" className=\"mx-1\"/>\r\n                  <Spinner animation=\"grow\" size=\"sm\" className=\"me-1\"/>\r\n                </> : 'Register'}\r\n              </Button>\r\n            </form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n"],"names":["Register","useState","first_name","last_name","email","phone","password","repeat_password","age","user","setUser","validationErrors","setValidationErrors","isLoading","setIsLoading","fireFlag","setFireFlag","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","passwordError","setPasswordError","rePasswordError","setRepasswordError","useContext","AuthContext","signup","signupResponse","navigate","useNavigate","serverError","setServerError","getFormValue","e","currentUser","target","name","value","useEffect","length","error","context","key","type","includes","message","replace","className","xs","md","onSubmit","preventDefault","validationError","joi","required","pattern","minDomainSegments","tlds","allow","min","max","validate","abortEarly","details","variant","label","placeholder","onChange","in","animation","size"],"sourceRoot":""}